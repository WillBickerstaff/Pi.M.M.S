#!/home/pimms/pimms-app/bin/python

import os, sys, subprocess, signal
from optparse import OptionParser
import monitor


parser = OptionParser()
parser.add_option('-d', '--db', default='templog.db', dest='db',
			help='Database location')
parser.add_option('-i', '--int', default=60, dest='log_int',
			help='Log interval')

def db_error(db):
    print "ERROR: Can not open or create database %s"%db
    sys.exit(1)

def create_db(db):
    try:
        open(options.db, 'w').close()
    except IOError:
        db_error(db)

def check_db(db):
    if not os.path.isfile(options.db):
        create_db(db)
    if os.path.isfile(options.db):
        os.environ['PIMMS_DB'] = os.path.abspath(db)
    else:
        db_error(db)

def ctrlc_handler(processes):
    for process in processes:
        process.send_signal(SIGTERM)
	
    sys.exit(1)

if __name__=='__main__':
    processes = []
    try:
        (options, args) = parser.parse_args()
        check_db(options.db)
        print 'Starting Monitor...'
        processes.append(subprocess.Popen(['python', 'monitor.py']))
        print 'Starting Gunicorn'
        processes.append(subprocess.Popen(['gunicorn', 'www.web:app',
                                           '--debug', '-b',
                                           'localhost:9001']))
        for p in processes:
	    print p.pid
        print processes
    except KeyboardInterrupt:
        ctrlc_handler(processes)